1，什么是函数式编程？
    关注做什么，也就是只需要告诉程序我要实现什么样的功能，不需要关注实现细节。
    也就是将要实现的功能的细节已经被封装好了，我们只需要调用即可。
    如：
    int[] nums = {1,2,3};
    int sum = Arrays.stream(nums).sum();
    System.out.println("求和" + sum);
    // 如上，求和这个功能是调用封装好的功能实现的，即告诉程序，我要做什么。

2，什么是命令式编程？
    关注怎么做，也就是要告诉程序怎么做才能实现功能。
    也就是我们自己需要去实现功能细节。
    如：
    int[] nums = {1,2,3};
    int sum = 0;
    for(int i:nums){
        sum += i;
    }
    System.out.println("求和" + sum);
    // 如上，求和这个功能的实现细节需要我们自己去写，即告诉程序怎么做，这就是命令式编程。


总结：个人理解上命令式编程和函数式编程，是在一个层度的代码封装上来定义的。因为在一个层度上的封装，然后调用就是函数式编程
     而，这个层度上的功能不封装而是自己去实现，就是命令式编程。然而，当更高层次的来调用方法式，也可以看成是”函数式编程“
     而更高层次的能力组合实现某个功能时，也可以看成命令式编程。
     灵活理解，哈哈。

函数式编程的优点：
1，调用封装好的能力就可以实现强大的能力，不需要自己去花时间实现细节。
2，因为是调用方法，所以代码会更整洁。